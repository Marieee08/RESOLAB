// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// For Primary Account Creation (For All)

model AccInfo {
  id                  Int                  @id @default(autoincrement())
  Name                String
  Email               String               @unique
  ContactNum          String
  Role                String
  ClientInfo          ClientInfo?          @relation(name: "AccInfoToClientInfo") //One-to-one
  BusinessInfo        BusinessInfo?        @relation(name: "AccInfoToBusinessInfo") //One-to-one
  UtilizationRequests UtilizationRequest[] @relation(name: "AccInfoToUtilizationRequest") //One-to-many
  EVCReservations     EVCReservations[]    @relation(name: "AccInfoToEVCReservations") //One-to-many
  MachineUtilizations MachineUtilization[] @relation(name: "AccInfoToMachineUtilization") //One-to-many
  CustomerFeedbacks   CustomerFeedback[]   @relation(name: "AccInfoToCustomerFeedback") //One-to-many
  EmployeeEvaluations EmployeeEvaluation[] @relation(name: "AccInfoToEmployeeEvaluation") //One-to-many
  JobandPayments      JobandPayment[]      @relation(name: "AccInfoToJobandPayment") //One-to-many
}

// For Acc Registration (For External Clients)

model ClientInfo {
  id        Int     @id @default(autoincrement())
  Address   String?
  City      String?
  Province  String?
  Zipcode   Int?
  accInfoId Int     @unique //Foreign key for one-to-one relationship
  accInfo   AccInfo @relation(name: "AccInfoToClientInfo", fields: [accInfoId], references: [id])
}

// For Acc Registration (For ext clients with business)

model BusinessInfo {
  id                  Int     @id @default(autoincrement())
  CompanyName         String?
  BusinessOwner       String?
  TINNum              String?
  BusinessPermitNum   String?
  CompanyEmail        String?
  ContactPerson       String?
  Designation         String?
  CompanyAddress      String?
  CompanyCity         String?
  CompanyProvince     String?
  CompanyZipcode      Int?
  CompanyPhoneNum     String?
  CompanyMobileNum    String?
  Manufactured        String?
  ProductionFrequency String?
  Bulk                String?
  CompanyIDNum        String?
  accInfoId           Int     @unique //Foreign key for one-to-one relationship
  accInfo             AccInfo @relation(name: "AccInfoToBusinessInfo", fields: [accInfoId], references: [id])
}

// For Reservations (For external clients)

model UtilizationRequest {
  id                    Int       @id @default(autoincrement())
  ProductsManufactured  String?
  BulkofCommodity       String?
  Facility              String?
  FacilityQty           Int?
  FacilityHrs           Int?
  Equipment             String?
  EquipmentQty          Int?
  EquipmentHrs          Int?
  Tools                 String?
  ToolsQty              Int?
  ToolsHrs              Int?
  RequestDate           DateTime? @default(now())
  EndDate               DateTime?
  DateofProcessing      DateTime?
  Processedby           String?
  accInfo               AccInfo   @relation(name: "AccInfoToUtilizationRequest", fields: [UtilizationRequestsId], references: [id])
  UtilizationRequestsId Int
}

// For Reservations (EVC Accounts)

model EVCReservations {
  id            Int       @id @default(autoincrement())
  ControlNo     Int?
  LvlSec        String?
  NoofStudents  Int?
  Subject       String?
  Topic         String?
  Teacher       String?
  EVCLabDate    DateTime?
  EVCTimeofUse  DateTime?
  DateRequested DateTime?
  Students      String?
  EVCApproval   String?
  accInfoId     Int? //Foreign key for one-to-many relationship
  accInfo       AccInfo?  @relation(name: "AccInfoToEVCReservations", fields: [accInfoId], references: [id])
}

// To be filled by Admin per request

model MachineUtilization {
  id               Int       @id @default(autoincrement())
  OTDate           DateTime?
  OTTypeofProducts String?
  StartTime        DateTime?
  EndTime          DateTime?
  OTMachineOp      String?
  DTDate           DateTime?
  DTTypeofProducts String?
  DTTime           Int?
  Cause            String?
  DTMachineOp      String?
  RepairDate       DateTime?
  Service          String?
  Duration         Int?
  RepairReason     String?
  PartsReplaced    String?
  RPPersonnel      String?
  ReviwedBy        String?
  DateReviewed     DateTime?
  accInfoId        Int? //Foreign key for one-to-many relationship
  accInfo          AccInfo?  @relation(name: "AccInfoToMachineUtilization", fields: [accInfoId], references: [id])
}

// Only for external clients

model CustomerFeedback {
  id           Int       @id @default(autoincrement())
  FeedbackDate DateTime?
  Q1           Int?
  Q2           Int?
  Q3           Int?
  Q4           Int?
  Q5           Int?
  Q6           Int?
  Q7           Int?
  accInfoId    Int? //Foreign key for one-to-many relationship
  accInfo      AccInfo?  @relation(name: "AccInfoToCustomerFeedback", fields: [accInfoId], references: [id])
}

// Only for external clients pt 2 ^^

model EmployeeEvaluation {
  id        Int       @id @default(autoincrement())
  EvalDate  DateTime?
  E1        Int?
  E2        Int?
  E3        Int?
  E4        Int?
  E5        Int?
  E6        Int?
  E7        Int?
  E8        Int?
  E9        Int?
  E10       Int?
  E11       Int?
  accInfoId Int? //Foreign key for one-to-many relationship
  accInfo   AccInfo?  @relation(name: "AccInfoToEmployeeEvaluation", fields: [accInfoId], references: [id])
}

// For after jobs (To be printed)

model JobandPayment {
  id             Int       @id @default(autoincrement())
  No             Int?
  Date           DateTime?
  ClientProfile  String?
  ProjDesc       String?
  Services       String?
  Minutes        Int?
  Costpermin     Decimal?
  TotalCost      Decimal?
  TotalAmntDue   Decimal?
  CompletionDate DateTime? @default(now())
  accInfoId      Int? //Foreign key for one-to-many relationship
  accInfo        AccInfo?  @relation(name: "AccInfoToJobandPayment", fields: [accInfoId], references: [id])
}
