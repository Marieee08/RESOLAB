// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model ClientInfo {
  id                  Int                  @id @default(autoincrement())
  Name                String
  Email               String               @unique
  ContactNum          String               @unique
  Address             String
  JobandPayments      JobandPayment[]      @relation(name: "ClientJobandPayments") // One-to-many relationship
  BusinessInfos       BusinessInfo[]       @relation(name: "ClientBusinessInfos")  // One-to-many relationship
  UtilizationRequests UtilizationRequest[] @relation(name: "ClientUtilizationRequests") // One-to-many relationship
  MachineUtilizations MachineUtilization[] @relation(name: "ClientMachineUtilizations") // One-to-many relationship
}

model JobandPayment {
  id             Int        @id @default(autoincrement())
  No             Int?
  Date           DateTime
  ClientProfile  String?
  ProjDesc       String?
  Services       String?
  Minutes        Int?
  Costpermin     Decimal?
  TotalCost      Decimal?
  TotalAmntDue   Decimal?
  CompletionDate DateTime?  @default(now())
  clientInfoId   Int
  ClientInfo     ClientInfo @relation(name: "ClientJobandPayments", fields: [clientInfoId], references: [id]) // Many-to-one relationship
}

model BusinessInfo {
  id                Int        @id @default(autoincrement())
  CompanyName       String?
  BusinessOwner     String?
  CompanyIDNum      String?
  TINNum            String?
  BusinessPermitNum String?
  CompanyEmail      String?
  ContactPerson     String?
  Designation       String?
  CompanyAddress    String?
  City              String?
  Province          String?
  Zipcode           Int?
  PhoneNum          Int?
  clientInfoId      Int
  ClientInfo        ClientInfo @relation(name: "ClientBusinessInfos", fields: [clientInfoId], references: [id]) // Many-to-one relationship
}

model UtilizationRequest {
  id                   String     @id @default(cuid())
  ProductsManufactured String
  BulkofCommodity      String
  Facility             String?
  FacilityQty          Int?
  FacilityHrs          Int?
  Equipment            String?
  EquipmentQty         Int?
  EquipmentHrs         Int?
  Tools                String?
  ToolsQty             Int?
  ToolsHrs             Int?
  RequestDate          DateTime?  @default(now())
  EndDate              DateTime?
  DateofProcessing     DateTime?
  Processedby          String?
  clientInfoId         Int
  ClientInfo           ClientInfo @relation(name: "ClientUtilizationRequests", fields: [clientInfoId], references: [id]) // Many-to-one relationship
}

model MachineUtilization {
  id               Int        @id @default(autoincrement())
  OTDate           DateTime
  OTTypeofProducts String
  StartTime        DateTime
  EndTime          DateTime
  OTMachineOp      String
  DTDate           DateTime
  DTTypeofProducts String
  DTTime           Int
  Cause            String
  DTMachineOp      String
  RepairDate       DateTime
  Service          String
  Duration         Int
  RepairReason     String
  PartsReplaced    String
  RPPersonnel      String
  ReviwedBy        String
  DateReviewed     DateTime
  clientInfoId     Int
  ClientInfo       ClientInfo @relation(name: "ClientMachineUtilizations", fields: [clientInfoId], references: [id]) //Many-to-one relationship
}